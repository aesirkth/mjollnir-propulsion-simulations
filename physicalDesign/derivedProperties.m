% This file is run in combustionSimulation.m
% Do not run this file as it is.
%
% This file contains derived properties for the physical design simulation of the Eyjafjallaj√∂kull hybrid rocket engine.
%
% DO NOT EDIT THIS FILE UNLESS YOU NEED TO ADD MORE DERIVED PROPERTIES. 
% ASSUMPTIONS AND INPUTS DO NOT GO IN THIS FILE

opts.OxidizerVolume = combustionState.opts.OxidizerVolume;
opts.OxidizerVolumeInLiter = opts.OxidizerVolume * 10*10*10;
opts.OxidizerTankDiameter = opts.OxidizerTankDiameterInCm / 100; % External diameter
opts.OxidizerTankRadius = opts.OxidizerTankDiameter / 2; % External radius
opts.OxidizerTankPressure = combustionState.opts.OxidizerPressure;
opts.OxidizerTankSafetyMargin = combustionState.opts.OxidizerTankSafetyMargin;
opts.OxidizerTankDesignPressure = opts.OxidizerTankPressure * opts.OxidizerTankSafetyMargin; % Including safety margin

opts.OxidizerVolumeWithExtraVolume = opts.OxidizerVolume * (1 + opts.ExtraVolumeFactor);
opts.OxidizerVolumeWithExtraVolumeInLiter = opts.OxidizerVolumeWithExtraVolume * 10*10*10;

opts.ExtraOxidizerSpaceInTank = opts.OxidizerVolumeWithExtraVolume - opts.OxidizerVolume;
opts.ExtraOxidizerSpaceInTankInLiters = opts.OxidizerVolumeWithExtraVolumeInLiter - opts.OxidizerVolumeInLiter;

[oxTankLength, oxTankMinThickness, oxTankThickness, oxTankMass, oxTankVolume] = correctedCapsuleTank(opts.OxidizerTankRadius, opts.OxidizerVolumeWithExtraVolume, opts.OxidizerTankDesignPressure, opts.OxidizerTankSigma, opts.OxidizerTankDensity);

opts.OxidizerTankMinimumThickness = oxTankMinThickness;
opts.OxidizerTankMinimumThicknessInMm = oxTankMinThickness * 1e3;
opts.OxidizerTankThicknessInMm = oxTankThickness * 1e3;
opts.OxidizerTankThickness = oxTankThickness;
opts.OxidizerTankAllowablePressure = tankAllowablePressure(opts.OxidizerTankRadius, opts.OxidizerTankThickness, opts.OxidizerTankSigma);
opts.OxidizerTankMass = oxTankMass;
opts.OxidizerTankLength = oxTankLength;
opts.OxidizerTankVolumeInLiter = oxTankVolume * 10*10*10;

opts.ccDiameter = combustionState.opts.CombustionChamberDiameter; % External diameter
opts.ccRadius = opts.ccDiameter / 2; % External radius
opts.ccPressure = combustionState.opts.ccCombustionPressure;
opts.ccSafetyMargin = combustionState.opts.ccCombustionPressureSafetyMargin;
opts.ccDesignPressure = opts.ccPressure * opts.ccSafetyMargin; % Including safety margin

ccMinThickness = capsuleTankThickness(opts.ccRadius, opts.ccDesignPressure, opts.ccSigma);
opts.ccMinimumThickness = ccMinThickness;
opts.ccMinimumThicknessInMm = ccMinThickness * 1e3;
opts.ccThicknessInMm = ceil(opts.ccMinimumThicknessInMm / 0.5) * 0.5; % Round to nearest 0.5 mm
opts.ccThickness = opts.ccThicknessInMm / 1e3;
opts.ccAllowablePressure = tankAllowablePressure(opts.ccRadius, opts.ccThickness, opts.ccSigma);

[ccMass] = cylinderTankMass(opts.ccRadius, combustionState.opts.FuelGrainLength, opts.ccThickness, opts.ccDensity);
opts.ccMass = ccMass;

[casingMass] = cylinderTankMass(opts.ccRadius - opts.ccThickness, combustionState.opts.FuelGrainLength, combustionState.opts.FuelGrainContainerWallThickness, combustionState.opts.FuelGrainContainerDensity);
opts.fuelGrainCasingMass = casingMass;
% [ccMass, ccLength, ccWallThickness, ccMassCheck, ccWallThicknessCheck] = capsuleTank(opts.FuelVolume, opts.ccDiameter, opts.ccCombustionPressure, opts.ccSigma, opts.ccDensity, opts.ccSafetyMargin);
% opts.ccMinimumThickness = ccWallThickness;